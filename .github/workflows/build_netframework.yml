name: .NET Framework
on:
  push:
  pull_request:
  release:
    types:
      - published
env:
  # Official NuGet Feed settings
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_TOKEN }}
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
    steps:
      - uses: actions/checkout@master
      - uses: nuget/setup-nuget@v1.0.5
        with:
          nuget-api-key: ${{ secrets.NUGET_TOKEN }}
          nuget-version: 'latest'
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.3
      - run: msbuild -t:restore ScriptCompiler.NetFramework.sln
      - run: msbuild -t:build ScriptCompiler.NetFramework.sln

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: nupkg
          path: bin\Release
  prerelease:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: nupkg
      - name: Push to GitHub Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            echo "Publishing $f"
            curl -vX PUT -u "pauldeen79:${{ secrets.FEED_TOKEN }}" -F package=@$f https://nuget.pkg.github.com/pauldeen79/
          done
        shell: bash
  deploy:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
      - name: Create Release NuGet package
        run: |
          arrTag=(${GITHUB_REF//\// })
          VERSION="${arrTag[2]}"
          echo Version: $VERSION
          VERSION="${VERSION//v}"
          echo Clean Version: $VERSION
          dotnet pack ScriptCompiler.sln -v normal -c Release --include-symbols --include-source -p:PackageVersion=$VERSION -p:Version=$VERSION -o nupkg
      - name: Push to GitHub Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            curl -vX PUT -u "pauldeen79:${{ secrets.FEED_TOKEN }}" -F package=@$f https://nuget.pkg.github.com/pauldeen79/
          done
        shell: bash
      - name: Push to NuGet Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            dotnet nuget push $f --source $NUGET_FEED --skip-duplicate --api-key $NUGET_KEY
          done
        shell: bash
